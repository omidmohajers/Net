//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Alvas.Audio;
using PA.Codec;
using PA.Net.Clients;
using PA.Net.Core;
using PA.Net.Core.Sources;
using System;

namespace PA.Distributer
{
    public class AudioDistributer : RealtimeDistributer
    {
        public event DataReceiveHandler VideoFrameFromSourceReceived = null;
        public AudioDistributer(INetClient client, long userID, long roomID) : base(client, userID, roomID)
        {

        }
        public AudioDistributer(INetClient client, FormatDetails audioType, long userID, long roomID) : this(client, userID, roomID)
        {
            CreateCodec(audioType);
        }

        public virtual void CreateCodec(FormatDetails audioType)
        {
            Codec = new AudioCodec(audioType);
        }

        public virtual void Init(AudioSource source)
        {
            Source = source;
        }

        public override bool Start()
        {
            if (Client == null)
            {
                throw new Exception("ارتباط مشخص نشده است");
            }
            if (Client.Channel == null)
            {
                throw new Exception("کانال ارتباطی مشخص نشده است");
            }
            ListenToSideEvents();
            return true;
        }
        public override void ListenToSideEvents()
        {
            Source.NewDataReceived += Source_NewDataReceived;
            Source.Start();
        }

        private void Source_NewDataReceived(object sender, EventArgs e)
        {
            byte[] frame = Source.CurrentData;
            if (VideoFrameFromSourceReceived != null)
                VideoFrameFromSourceReceived(this, this.Client, frame);
            Client.Send(CreatePackage(Codec.Encode(frame)));
        }

        private byte[] CreatePackage(byte[] frame)
        {
            Package pak = new Package(CommandType.AudioBroadcast, System.Net.IPAddress.Broadcast, Client.IP, null, RoomID);
            pak.UserID = Client.UserID;
            pak.SenderIP = Client.IP;
            pak.Data = frame;
            return Package.ToByteArray(pak);
        }
    }
}


